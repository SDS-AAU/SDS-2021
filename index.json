[{"uri":"https://sds-aau.github.io/SDS-2021/m1/00_assignments/assignment1/","title":"Assignment 1 - Digital Nomads","tags":[],"description":"","content":"You are given 2 datasets from https://nomadlist.com/ - A community page for remote workers worldwide. Further, you are provided with a countries list, a dataset containing information on countries, regions and countrycodes.\n  Trips data: holds ~46k individual trips of travelers on the platform. URL:https://sds-aau.github.io/SDS-master/M1/data/trips.csv\n  People data: contains some personal information on 4k travelers URL:https://sds-aau.github.io/SDS-master/M1/data/people.csv\n  Country data: Holds countrycodes, contrynames and region-associations URL:https://sds-aau.github.io/SDS-master/M1/data/countrylist.csv\n  Use the pandas read csv function to read the URLs into your working notebook, as shown in SDS examples. Your solution approach is more important than the results obtained! Comment your notebook well, explaining all the steps of your analysis. Small technical explanations can go as comments in the code. Broader explanations should be inserted as markdown cells. Remember that notebooks execute sequentially.\nSubmission as PDF (notebook and output)\n  Submission: Monday 13.09.2021 23:59:00. Peergrade.io\n  Preprocessing\na. Trips: transform dates into timestamps (note: in Python, you will have to coerce errors for faulty dates)\nb. Calculate trip duration in days (you can use loops, list comprehensions or map-lambda-functions (python) to create a column that holds the numerical value of the day. You can also use the datetime package.)\nc. Filter extreme (fake?) observations for durations as well as dates - start and end (trips that last 234565 days / are in the 17th or 23rd century) The minimum duration of a trip is 1 day! Hint: use percentiles/quantiles to set boundaries for extreme values - between 1 and 97, calculate and store the boundaries before subsetting. Rhint: Use percent_rank(as.numeric(variable)) to create percentiles\nd. Join the countrylist data to the trips data-frame using the countrycode as a key e. [Only for python users ] Set DateTime index as the start date of a trip\n  People\na. How many people have a least a “High School” diploma? Hint: For this calculation remove missing value-rows or fill with “False”.\nb. How many “Startup Founders” have attained a “Master’s Degree”? Bonus: compared to people who don’t have a formal higher education (e.g. by using the “False” occurrences)?\nc. Who is the person with a Master’s Degree that has the highest number of followers? Bonus: Explore the individual further, what else can you find out?\n  Trips\na. Which country received the highest number of trips? – And which the lowest?\nb. Which region received the highest number of trips in 2017? Use the start of trips as a time reference.\nc. Which country in “Western Europe” did travelers spent least time? – Provide visualization\nd. Do nomad Startup Founders tend to have shorter or longer trips on average?\ne. visualize over-time median trip duration overall (bonus: and split by world-region) The plot will look weird ^^. PyHint: Resample by week (‘W’) and calculate the size of observations. RHint: Use the floor_date function to reset dates by week.\n  Solutions  R team :::: HERE :::: Py team (coming\u0026hellip;I know I\u0026rsquo;m late)  "},{"uri":"https://sds-aau.github.io/SDS-2021/m2/00_assignments/assignment1/","title":"Assignment 1 - Network Analysis","tags":[],"description":"","content":"Introduction  In th first Part 2, you will replicate a well known network analysis, with different data and some twists. Data: The data is to be found at: https://github.com/SDS-AAU/SDS-master/tree/master/00_data/network_krackhard (Hint: You neet to download the raw data)  Data: What do I get? Background Let the fun begin. You will analyze network datacollected from the managers of a high-tec company. This dataset, originating from the paper below, is widely used in research on organizational networks. Time to give it a shot as well. Krackhardt D. (1987). Cognitive social structures. Social Networks, 9, 104-134. The company manufactured high-tech equipment on the west coast of the United States and had just over 100 employees with 21 managers. Each manager was asked to whom do you go to for advice and who is your friend, to whom do you report was taken from company documents. Description\nThe dataset includes 4 files - 3xKrack-High-Tec and 1x High-Tec-Attributes. Krack-High-Tec includes the following three 21x3 text matrices:\n ADVICE, directed, binary FRIENDSHIP, directed, binary REPORTS_TO, directed, binary  Column 1 contains the ID of the ego (from where the edge starts), and column 2 the alter (to which the edge goes). Column 3 indicates the presence (=1) or absence (=0) of an edge.\nHigh-Tec-Attributes includes one 21x4 valued matrix.\n ID: Numeric ID of the manager AGE: The managers age (in years) TENURE: The length of service or tenure (in years) LEVEL: The level in the corporate hierarchy (coded 1,2 and 3; 1 = CEO, 2 = Vice President, 3 = manager) DEPT: The department (coded 1,2,3,4 with the CEO in department 0, ie not in a department)  Tasks 1. Create a network  Generate network objects for the companies organizational structure (reports to), friendship, advice This networks are generated from the corresponding edgelists Also attach node characteristics from the corresponding nodelist  2. Analysis Make a little analysis on:\nA: Network level characteristics. Find the overal network level of:\n Density Transistivity (Clustering Coefficient) Reciprocity  \u0026hellip; for the different networks. Describe and interpret the results. Answer the following questions:\n Are relationships like friendship and advice giving usually reciprocal? Are friends of your friends also your friends? Are the employees generally more likely to be in a friendship or advice-seeking relationship?  B: Node level characteristics: Likewise, find out:\n Who is most popular in the networks. Who is the most wanted friend, and advice giver? Are managers in higher hirarchy more popular as friend, and advice giver?  C: Relational Characteristics: Answer the following questions:\n Are managers from the same 1. department, or on the same 2. hirarchy, 3. age, or 4. tenuere more likely to become friends or give advice? (hint: assortiativity related) Are friends more likely to give each others advice?  3. Visualization Everything goes. Show us some pretty and informative plots. Choose what to plot, and how, on your own. Interpret the results and share some insights.\nSubmission as PDF (notebook and output)\n  Submission: Thursday 7.10.2021 23:59:00. Peergrade.io\n"},{"uri":"https://sds-aau.github.io/SDS-2021/m1/00_assignments/","title":"Assignments","tags":[],"description":"","content":"Here you will find all the assignments for this module.\n"},{"uri":"https://sds-aau.github.io/SDS-2021/m2/00_assignments/","title":"Assignments","tags":[],"description":"","content":"Here you will find all the assignments for this module.\n"},{"uri":"https://sds-aau.github.io/SDS-2021/m2/01_networks/1_networks/","title":"Basics Network Analysis","tags":[],"description":"","content":" Use the tabs to access content. Theory part is general, R \u0026amp; Python application part language specific.\n This session introduces unsupervised machine learning (UML)\n Recommended Datacamp exercises:  Introduction to network Analysis in Python Introduction to network Analysis in R    Theory: Network Analysis R Application - Network Analysis Python Application - Network Analysis  Video   Slides Use arrows keys on keyboard to navigate. Alternatively fullscreen slides available here     Follow along    HTML Notebook    Colab Notebook   Video 1: Intro \u0026 Ecosystem   Video 2: Network Measures/h2   Video 3: Mini-Case/h2      Follow along    Colab Notebook   Video 1: Intro \u0026 Ecosystem   Video 2: Network Measures   Video 3: Mini-Case       "},{"uri":"https://sds-aau.github.io/SDS-2021/m1/02_basics/01_stat_prog/","title":"Basics Statistical Programming","tags":[],"description":"","content":" Use the tabs to access content. Theory part is general, R \u0026amp; Python application part language specific.\n This session is a basic introduction to statistical programming as well as a short brush-up on data more generally. For some, this will be \u0026ldquo;old news\u0026rdquo;, but many will certainly benefit from reviewing this material. We start with a generall theory lecture on data structures and properties, and then dive into R and Python specific applications of statistical programming.\nTheory: Introduction to Data R Application - Statistical Programming Python Application - Statistical Programming  Video   Slides Use arrows keys on keyboardto navigate. Alternatively fullscreen slides available here     Follow along    HTML Notebook    Colab Notebook   Video      Follow along    Colab Notebook   Video Part 1   Video Part 2   Video Part 3       "},{"uri":"https://sds-aau.github.io/SDS-2021/info/","title":"Info, Schedule &amp; Co","tags":[],"description":"","content":"General info about the semester.\nVideo from the Intro Session PS: Sorry, the sound settings messed up - you have to turn up the volume.  \n"},{"uri":"https://sds-aau.github.io/SDS-2021/info/01_infrastructure/","title":"Infrastructure","tags":[],"description":"","content":"Mail Infrastructure  MS teams : Join our MS our teams channel to get updates from us, Q\u0026amp;A, and talk to your peers. Moodle : We will not use it from now on for content, but for the sake of completeness. However, you will still find your calendar there and we may use it from time to time to send out mass-mails to you all. Datacamp : Get access to all the Datacamp premium content for free to facilitate your data science journey. Use your AAU mail here when signing up.  Adittional Infrastructure used  Github Provides internet hosting for software development and version control using Git. It offers the distributed version control and source code management (SCM) functionality of Git, plus its own features. It is also commonly used to host open-source projects, including data science projects. If you do not have it already, you are advice to create an account to manage and showcase your work during this semester. A brief introduction into the main functionalists can be found here.  "},{"uri":"https://sds-aau.github.io/SDS-2021/m1/03_ml/01_uml/","title":"Unsupervised Machine Learning (UML)","tags":[],"description":"","content":" Use the tabs to access content. Theory part is general, R \u0026amp; Python application part language specific.\n This session introduces unsupervised machine learning (UML)\n Recommended Datacamp exercises:  Python R    Theory: Unsupervised ML R Application - UML Python Application - UML  Video   Slides Use arrows keys on keyboard to navigate. Alternatively fullscreen slides available here     Follow along    HTML Notebook    Colab Notebook   Video 1: EDA \u0026 Dimensionality Reduction   Video 2: Clustering      Follow along    Colab Notebook   Video 1: EDA \u0026 Dimensionality Reduction   Video 2: EDA \u0026 Clustering       "},{"uri":"https://sds-aau.github.io/SDS-2021/m1/","title":"Applied Data Science and Machine Learning","tags":[],"description":"","content":"M1 - Applied Data Science and Machine Learning This module provides a condensed introduction to the “Data Science Pipeline”, introducing students to methods, techniques, and workflows in applied data analytics and machine learning, including data acquisition, preparation, analysis, visualization, and communication.\nContent by week for this module Click on the to do for the week to see what you should do to keep up with the module\n   W 35: Introduction \u0026amp; landing   Weekly to do    Introduction to R \u0026amp; Python (Datacamp, both necessary if no prior experience)  Intro to Python and/or R [Intro to R   Statistics Refresher (Datacamp, recommended if no prior statistics classes, choose either R or Python)  Python  Statistical Thinking 1 [Statistical Thinking 2 Intro to linear modelling   R:  Introduction to data in R Foundation of probability; Correlation \u0026amp;amp; regression     Course Material (Watch videos, study/run notebooks, solve provided exercises, optimally study suggested further material)  Warmup basics: Theory for all, afterwards feel free to choose R or Python track     \n  W 36: Data Manipulation, Exploratory Data Analysis (EDA), Data Visualization   Weekly to do    Continue with the Course material (Datacamp, both necessary if no prior experience)  Statistical Programming Data Manipulation Data Visualization   Datacamp Courses of your Choice (For instance Pandas or Tidyverse practice) 1st Workshop 1st Peergrade Assignment   \n  W 37: Unsupervised Machine Learning (UML)   Weekly to do    Continue with the Course material (Datacamp, recommended but not mandatorye)  Python: UML R: UML   Course Material (Watch videos, study/run notebooks, solve provided exercises, optimally study suggested further material)  Unsupervised ML   2nd Workshop 2nd Peergrade Assignment   \n  W 38: Supervised Machine Learning (SML)\n  W 39: Project work + exam\n  "},{"uri":"https://sds-aau.github.io/SDS-2021/m1/00_assignments/assignment2/","title":"Assignment 2 - UML with Pokemon","tags":[],"description":"","content":"Description This time you will work with Pokemon data. No data munging needed. Just old-school (U)ML.\nSubmission Submission as PDF (notebook and output)\nSubmission: Monday 20.09.2021 23:59:00. Peergrade.io\nData The data is available through the URL: https://sds-aau.github.io/SDS-master/00_data/pokemon.csv. It contains data on 800 Pokemon from the 1st to the 6th generation.\nTasks  Give a brief overview of data, what variables are there, how are the variables scaled and variation of the data columns. Execute a PCA analysis on all numerical variables in the dataset. Hint: Don\u0026rsquo;t forget to scale them first. Use 4 components. What is the cumulative explained variance ratio? Hint: I am not sure this terminology and code was introduced during class, but try and look into cumulative explained variance and sklearn(package) and see if you can figure out the code needed. Use a different dimensionality reduction method (eg. UMAP/NMF) – do the findings differ? Perform a cluster analysis (KMeans) on all numerical variables (scaled \u0026amp; before PCA). Pick a realistic number of clusters (up to you where the large clusters remain mostly stable). Visualize the first 2 principal components and color the datapoints by cluster. Inspect the distribution of the variable Type1 across clusters. Does the algorithm separate the different types of pokemon? Perform a cluster analysis on all numerical variables scaled and AFTER dimensionality reduction and visualize the first 2 principal components. Again, inspect the distribution of the variable “Type 1” across clusters, does it differ from the distribution before dimensionality reduction?  Solutions  R team :::: HERE :::: Py team :::: HERE :::: - Includes also some SML  "},{"uri":"https://sds-aau.github.io/SDS-2021/m1/02_basics/02_data_manipulation/","title":"Basics Data Manipulation","tags":[],"description":"","content":" Use the tabs to access content. Theory part is general, R \u0026amp; Python application part language specific.\n This session introduces some fundamental concepts of data manipulation and Exploratory Data Analysis. We will again start with a theoretical lecture on fundamental concepts and techniques in data manipulation, and afterwards again explore them in R and Python specific applications. These applications are complemented by recap exercises to test yourself.\nTheory: Fundamentals of Data Manipulation R Application - Data Manipulation Python Application - Data Manipulation  Video   Slides Use arrows keys on keyboardto navigate. Alternatively fullscreen slides available here     Follow along    HTML Notebook    Colab Notebook   Complementary Exercises    1 Basics    2 Joins    3 Challange   Video      Follow along    Colab Notebook   Video       "},{"uri":"https://sds-aau.github.io/SDS-2021/m2/01_networks/2_networks_intermediate/","title":"Intermediate Network Analysis","tags":[],"description":"","content":" Use the tabs to access content. Theory part is general, R \u0026amp; Python application part language specific.\n This session introduces to slightly more advanced concepts in network analysis\nR Application - Intermediate Network Analysis Python Application - Intermediate Network Analysis   Follow along    HTML Notebook  Notebook    Colab Notebook   Video 1      Follow along    Colab Notebook   Video 1: Intro    Video 2: Case       "},{"uri":"https://sds-aau.github.io/SDS-2021/m1/01_warmup/01_business/","title":"Intro Talk - Data Science in business","tags":[],"description":"","content":" Use the tabs to access content\n This Video series contains a 3-part talk by Daniel and Roman on data science applications in business.\nFollow along:\n  Slides DS in business  1 - Current state 2 - Intro ML 3 - DS Teams   Data Science in business 1 - Current state      Data Science in business 2 - Introduction to Machine Learning      Data Science in business 3 -Team and Roles       "},{"uri":"https://sds-aau.github.io/SDS-2021/m1/03_ml/02_sml/","title":"Supervised Machine Learning (SML)","tags":[],"description":"","content":" Use the tabs to access content. Theory part is general, R \u0026amp; Python application part language specific.\n This session introduces unsupervised machine learning (UML)\n Recommended Datacamp exercises:  Python - Intro to supervised learning Python - Decision Tree modeling R - Supervised classification R - Supervised Regression    Theory: Supervised ML R Application - SML Python Application - SML  Video 1: Introduction \u0026 Statistics Refresher   Video 2: Generalization, Model Classes \u0026 Tuning   Slides Use arrows keys on keyboard to navigate. Alternatively fullscreen slides available here     Follow along    HTML Notebook    Colab Notebook   Video 1: Introduction \u0026 ML workflows with tidymodels   Video 2: Regression problem case   Video 3: Classification problem case      Follow along    Colab Notebook   Video 1: Introduction \u0026 ML/Model fitting Mechanics    Video 2: Regression problem case    Video 3: Classification problem case and more        "},{"uri":"https://sds-aau.github.io/SDS-2021/m1/00_workshops/01_workshop1/","title":"Workshop 1","tags":[],"description":"","content":"In this workshop we are going to work with the Open Policing Dataset. Below you will find 2 notebooks where this dataset (Rhode Island) has been explored. You can check out some of the research based on this data ont the project\u0026rsquo;s page.\n Python Colab  R Colab\nSchedule for the workshop    Time Activity     9:10-9:45 Work in groups replicating the notebooks with some level of variation   10:00-10:15 Identify interesting questions (all together in class)   10:15-11:00 Solve these questions   11:10-11:45 Discuss solutions R/Py split   11:45-12:00 Hand out Peergrade assignment    Joint recordings R Application Python Application  Assignment 1 handout     R: Recording coming soon    Python group recoding        "},{"uri":"https://sds-aau.github.io/SDS-2021/m2/00_workshops/01_workshop1/","title":"Workshop 1 - Danish Power Elites","tags":[],"description":"","content":"Introduction Context: The Danish Power Elites  Antons PhD Thesis Brief Summary of findings (CBS) Journal PAper in Sociology More to be found with googleling\u0026hellip;  Data  Github (R Repository) Magteliten website Or, easier\u0026hellip; on our github  Schedule for the workshop    Time Activity     9:10-9:30 Indivitual/Groups work making sense of data, EDA   9:30-9:45 Identify interesting questions (all together in class)   10:00-11:00 Solve these questions R/Py split   11:10-11:30 Discuss solutions R/Py split   11:30-12:00 Joint review, Hand out Peergrade assignment      "},{"uri":"https://sds-aau.github.io/SDS-2021/m1/00_workshops/","title":"Workshops","tags":[],"description":"","content":"In the live workshops we will aim at working with real world data in groups in class. Towards the end of the session, we will be collecting and disckussin results.\n"},{"uri":"https://sds-aau.github.io/SDS-2021/m2/00_workshops/","title":"Workshops","tags":[],"description":"","content":"In the live workshops we will aim at working with real world data in groups in class. Towards the end of the session, we will be collecting and disckussin results.\n"},{"uri":"https://sds-aau.github.io/SDS-2021/m1/02_basics/03_data_visualization/","title":"Basics Data Visualization","tags":[],"description":"","content":" Use the tabs to access content. Theory part is general, R \u0026amp; Python application part language specific.\n This session introduces some fundamental concepts of data visualization. After a theoretical lecture on types and dimensions of data visualization, we will explore the visualization of different data types, structure, and properties in R and Python specific applications.\nTheory: Elements of Data Visualization R Application - Data Visualization Python Application - Data Visualization  Video   Slides Use arrows keys on keyboardto navigate. Alternatively fullscreen slides available here     Follow along    HTML Notebook    Colab Notebook   Video      Follow along    Colab Notebook   Video Part 1   Video Part 2       "},{"uri":"https://sds-aau.github.io/SDS-2021/m1/02_basics/","title":"Basics of Statistical Programming and Data Manipulation (W35-36)","tags":[],"description":"","content":"This chapter is a basic introduction to statistical programming as well as a short brush-up on data more generally. For some, this will be \u0026ldquo;old news\u0026rdquo;, but many will certainly benefit from reviewing this material. Afterwards, we introduces some fundamental concepts of data manipulation and exploratory data analysis (EDA).\n"},{"uri":"https://sds-aau.github.io/SDS-2021/m1/00_assignments/group_assignment/","title":"Group Assignment","tags":[],"description":"","content":"SDS 2021 - M1: Group Assignment Introduction With the individual assignments, you already performed most of the steps in a typical machine learning pipeline. You imported some data, cleaned it, explored the variables and their relationships using summary statistics and visualisations. You also exercised some standard machine learning preprocessing procedures such as feature scaling and dealing with missing values.\nYou practised unsupervised machine learning techniques for dimensionality reduction (e.g. PCA) and clustering (e.g. KNN) to discover latent relationships between features and groupings of observations. In the final workshop and online material you finally used supervised machine learning for regression and classification problems, where you created models to predict an outcome of interest given some input features.\nNow it is time to bring all these steps together and apply them to a setting that you find interesting. This should apply the following tasks.\n Identify an interesting problem that can be tackled using data science techniques. Select and obtain relevant data to do so. Clean and manipulate the data to make it useful for data science techniques. Carry out an exploratory data analysis to provide intuition into the content of the data, and interesting relationships to be found in it. Use unsupervised ML techniques to discover latent relationships within the data. Use supervised ML techniques to create models that predict an outcome of interest. Document your workflow in a reconstructable manner. Report your findings in an accessible manner.  Task description Data \u0026amp; Problem identification In this exercise, you are asked to choose and obtain a dataset you consider interesting and appropriate for the tasks required. Some of you may already have some ideas about interesting datasets. There are many open datasets available on the internet (e.g. kaggle or individual projects like Stanford Open Policing or download some of the Datacamp project datasets) here a recent list of open data repositories for inspiration\nIf you instead want to collect your data (e.g. scraping Twitter or other platforms) – we will not hold you back. However, consider the timeframe.\nThe data should fulfill the following minimum requirements:\n It should be big enough to be useful for applying data science techniques (rule of thumb: minimum \u0026gt; 500 observations, \u0026gt; 10 features). It contains an interesting outcome to be predicted via supervised ML. It is not completely trivial and clean, and at least requires a minimum amount of cleaning, munging, preprocessing (eg. no toy dataset such as Iris, diamonds, or cars).  Analysis pipeline The analysis to be carried out by you has to contain elements of data manipulation, exploration, unsupervised and supervised ML.\nGenerally, you can combine parts from the individual assignments and use them as a template for the module assignment. Going beyond that is not required (but for sure appreciated). Below a (rather detailed) checklist to make sure you have all the pieces.\n Definition of a problem statement and a short outline of the implementation Description of data acquisition / how it was collected (by you or the publisher of the data) Data preparation  Data cleaning (if needed) Recoding (label encoding, dummy creation etc.) Merging and wrangling (if needed)   Exploratory data analysis  Relevant! summary statistics Relevant! visualisations Appropriate description (This is important!)   Feature scaling (if applicable) Missing data imputation (if applicable and deemed relevant) Unsupervised ML  Dimensionality reduction: E.g. PCA, truncated SVD, NMF Clustering: E.g. KMeans / Hierarchical clustering, HDBSCAN Insights from the analysis used for further descriptive exploration of the data   Supervised ML  Train- / Testset preparation classification or/and regression problem Use of different algorithms (min. 3) compared and ranked according to their performance using appropriate metrics (k-fold cross-validation) you may include hyperparameter tuning (grid-search, adaptive resampling etc.) performance evaluation on the test set (scores, performance reports but also visuals where useful)    Many of the steps are optional. So choose which methods you deem helpful and relevant to explore your chosen problem.\nNote: Quality \u0026gt; Quantity. Consider which analysis, summarization, and visualization adds value. Excessive and unselective outputs (e.g. running 20 different models without providing a reason for, providing all possibilities of different plots without discussing and evaluating the insights gained from it) will not be considered helpful but rather distracting.\nDocumentation and Deliverables You are asked to hand in two different report formats, namely:\n Functional computational notebook Stakeholder report  Computational Notebook The notebook targets a machine-learning literate audience. Here you can go deeper into the technical details and method considerations. Provide thorough documentation of the whole process, the used methods. Describe the intuition behind the selected and used methods, justify choices made, and interpret results (e.g. Why scaling? Why splitting the data? Why certain tabulations and visualizations? What can be seen from \u0026hellip; ?, How did you select a particular algorithm? Why did you scale features in one way or another?).\nPlease provide the notebook as a PDF (Knittered from rmd or converted ipynb) with a public link to a functional Colab version (test it beforehand in incognito/private mode of your browser)\nStakeholder Report The stakeholder report (simple PDF, no code) summarises the analysis for a non-technical audience. Here you don\u0026rsquo;t need to discuss alternative approaches to standardization and alike.\nInstead, you should try to explain the analysis and results, emphasizing its meaning and interpretation. Aim at a length of not more than 5 pages, including tables \u0026amp; visualizations.\nFinally  Submission deadline is 27.09 - on https://digitaleksamen.aau.dk/ Write to the secretary about your groups and language choice In case of trouble/issues/questions, please write on Teams.  "},{"uri":"https://sds-aau.github.io/SDS-2021/info/02_modules/","title":"Modules","tags":[],"description":"","content":"The course is structured in 3 modules.\nM1: Applied Data Science and Machine Learning This module will prove a condensed introduction to the “Data Science Pipeline”, introducing students to methods, techniques, and workflows in applied data analytics and machine learning, including data acquisition, preparation, analysis, visualization, and communication.\nM2: Network Analysis and Natural Language Processing Focuses on analyzing a variety of unstructured data sources. Particularly, students will learn how to explore, analyze, and visualize natural language (text) as well as relational (network) data.\nM3: Deep Learning and Artificial Intelligence for Analytics Introduces to the most recent developments in machine learning, which are deep learning and artificial intelligence applications. The module will provide a solid foundation for this exciting and rapidly developing field. Students will learn whether and how to apply deep learning techniques for business analytics, and acquire proficiency in new methods autonomously.\nM4: Capstone Project  Submission ~8/1 2022 Requirements  "},{"uri":"https://sds-aau.github.io/SDS-2021/m2/01_networks/3_networks_2mode/","title":"Network 2-Mode","tags":[],"description":"","content":" Use the tabs to access content. Theory part is general, R \u0026amp; Python application part language specific.\n This session introduces to multimodel natwork analysis concepts\nR Application -2-mode Network Analysis Python Application - -2-mode Network Analysis   Follow along    HTML Notebook  Notebook    Colab Notebook  Video 1: Intro   Video 2: Application      Follow along    Colab Notebook 1/a    Colab Notebook 2   Video 1: Intro    Video 2: Case       "},{"uri":"https://sds-aau.github.io/SDS-2021/m2/01_networks/","title":"Network Analysis","tags":[],"description":"","content":"This chapter introduces you to network analysis and working with relational data.\n"},{"uri":"https://sds-aau.github.io/SDS-2021/m2/","title":"Network Analysis &amp; NLP","tags":[],"description":"","content":"M2 - Network Analysis \u0026amp; NLP This module provides a condensed introduction analysing two popular forms of unbstructured data, namely relational and text data.\nContent by week for this module Click on the to do for the week to see what you should do to keep up with the module\n  W 40: Introduction to Network Analysis W 41: Introduction to Natural-Language-Processing (NLP) W 43: Advanced applications in Network and Text Analysis W 44: Project work + exam  "},{"uri":"https://sds-aau.github.io/SDS-2021/m1/00_workshops/02_workshop2/","title":"Workshop 2","tags":[],"description":"","content":"In this workshop we are going to explore the nomad data (cities) using unsupervised ML techniques. We used the data in a research project some years ago and you can check out a conference presentation below:\n  Things to do! You will find the data for today\u0026rsquo;s session here: https://sds-aau.github.io/SDS-master/M1/data/cities.csv Use the template from the Penguin analysis with UML and build a notebook that covers following steps:\n Stratup  Load up and explore the data (a bit) Clean up if you thing you neeed to Select the nummerical variables to be used for UML Preprocess the data for UML   Dimensionality reduction  Use PCA for dimensionality reduction Explore variable loading Plot 1. vs 2. component If you want, use another algorithm for the same steps and compare results   Clustering  Perform a clustering on the reduced data Plot the clusters into the above visualization Explore the results (clusters vs components / clusters vs aggregated variables of interest)    Schedule for the workshop    Time Activity     9:10-9:45 Work in groups on Dimensionality reduction   10:00-10:15 Explore issues and discuss   10:15-11:00 Work in groups on Clustering questions   11:10-11:45 Discuss solutions and explore alternative analyses split   11:45-12:00 Hand out Peergrade assignment    In class Notebooks  R team :::: HERE :::: Py team (coming\u0026hellip;I know I\u0026rsquo;m late)  Videos Joint recordings R Application Python Application  Assignment 2 handout     R: Recording coming soon    Python group recoding        "},{"uri":"https://sds-aau.github.io/SDS-2021/m1/00_workshops/03_workshop3/","title":"Workshop 3: ML on insideairbnb","tags":[],"description":"","content":"In this workshop we are going to explore the insideairbnb using supervised ML techniques. We used the data in a research project some years ago and you can check out a conference presentation below:\nThings to do!  Start Up  Inspect website, choose and download relevant data Inspect the data, EDA Clean a bit if deemed necessary Choose your outcome of interest Check if any feature engineering necessary    Notebooks from the workshop  [  R HTML]((https://sds-aau.github.io/SDS-2021/workshops/2021/M1_workshop3_SML_R.nb.html)  Python Colab  Videos Joint recordings R Application Python Application  Intro   Group Assignment handout     R: Recording coming soon    Python group recoding        "},{"uri":"https://sds-aau.github.io/SDS-2021/info/04_litetrature/","title":"Literature &amp; Resources","tags":[],"description":"","content":"While this course does not come with a list of mandatory readings, we will often refer to some central resources in R and python, which for the most part can always be accessed in a free and updated online version. We generally recommend you to use these amazing resources for problem-solving and further self-study on the topic.\nMain Literature These pieces of work can be seen as main references for data science using R and Python. We will frequently refer to selected chapters for further study.\nR  Wickham, H., \u0026amp; Grolemund, G. (2016). R for data science: import, tidy, transform, visualize, and model data. O\u0026rsquo;Reilly Media, Inc. Online available here Baumer, B., Kaplan, D. \u0026amp; Horton, N. (2020) Modern Data Science with R (2nd Ed.). CRC Press Online available here Kuhn, M., Silge, J. (2020) Tidy Modeling with R Online available here  Python  VanderPlas, J. (2016). Python data science handbook: Essential tools for working with data. O\u0026rsquo;Reilly Media, Inc. Online available here  Supplementary literature R  R Markdown: The Definitive Guide Efficient R Programming Functional Programming in R (Stanford, Hadley) Exploring Enterprise Databases with R  Further Ressources Data Science Cloud services  Notebook bases:  Google Colab: Googles popular service for editing, running \u0026amp; sharing Jupyter notebooks (Only Python Kernel, but R kernel can be accessed via some tricks) Deepnote: New popular online notebook service with good integration to other services (Python, R \u0026amp; more) Kaggle: Also provides their own cloud-based service co create and run computational notebooks. Convenient, unlimited, but a bit slow (Pyhton, r ).   Instance based:  UCloud: New cloud infrastructure provided by AAU, AU, SDU AAU Strato: AAU CLAUDIA infratructure. Very powerful, but access needs a bit of experience with working via terminal.    Community  Kaggle: Crowdsourced data science challanges. Nowadays also provides a vivid community where you find datasets, notebooks for all kind of data science exercises.  Tools \u0026amp; Helpers  rmd to ipynb converter ipynb to pdf converter  "},{"uri":"https://sds-aau.github.io/SDS-2021/info/03_schedule/","title":"Semester Schedule","tags":[],"description":"","content":"M1: Week 35-39 Topics  W 35: Introduction \u0026amp; landing W 36: Data Manipulation, Exploratory Data Analysis (EDA), Data Visualization W 37: Unsupervised Machine Learning (UML) W 38: Supervised Machine Learning (SML) W 39: Project work + exam  Key Dates  Individual assignment  1: 08.-13.09.2021, 23:59:00 at the latest (Peergrade) 2: 15.-20.09.2021, 23:59:00 at the latest (Peergrade)   Group assignment: 21.-27.09.2021 (Digital Eksamen) Final exam: 29.09.2021  M2: Week 40-44 Topics  W 40: Introduction to Network Analysis W 41: Introduction to Natural-Language-Processing (NLP) W 43: Advanced applications in Network and Text Analysis W 44: Project work + exam  Key Dates  M2 individual assignment  1: 04.-07.10.2021, 23:59:00 at the latest (Peergrade) 2: 12.-15.10.2021, 23:59:00 at the latest (Peergrade)   Group assignment: 25.10.-01.11.2021 (Digital Eksamen) Final exam: 03.11.2021  M3: Week 45-48 Topics  W 45: Introduction to Artificial Neural Networks (ANN) \u0026amp; Deep Learning (DL) W 46: Neural networks for spatial data: Recurrent Neural Networks (RNN) W 47: Neural Networks for sequential data: Recurrent Neural networks (RNN \u0026amp; LSTM) W 48: project work + exam  Key Dates  M3 individual assignment  1: 17.-22.11.2021 23:59:00 at the latest (Peergrade)   Group assignment: 24.11.-01.12.2020 (Digital Eksamen) Final exam: 03.12.2021  "},{"uri":"https://sds-aau.github.io/SDS-2021/m1/01_warmup/","title":"Warmup (W35)","tags":[],"description":"","content":"This warmup introduces on a high level to the use of DS/ML methods in Business. The second part of the warmup provides an overview of the infrastructure used at SDS.\nData Science in Business In this chapter you learn about data science and ML applications in business applications. The presentations have been recorded as part of a workshop on Data Science for Business Leaders. Contents are not part of the course curriculum, yet a good way to get more familiar with teminology.\nIntroduction to the Data Science Ecosystem Overview of software, platforms and most other things you are going to work with at SDS. You only have to work in one of the 2 languages but it\u0026rsquo;s still nice to know how the other ecosystem looks like\u0026hellip;\n"},{"uri":"https://sds-aau.github.io/SDS-2021/m1/03_ml/","title":"Basics Machine Learning (W37-38)","tags":[],"description":"","content":"This chapter introduces you to the intuition behind unsupervised (UML) and supervised machine (SML) learning, and demonstrates common techniques and workflows. It contrasts UML (=trained on labeled data) with SML (trained on labeled data), and also distinguishes it from traditional inferential statistics (e.g. econometrics).\n"},{"uri":"https://sds-aau.github.io/SDS-2021/info/05_requirements_project/","title":"Semester Project Requirements","tags":[],"description":"","content":"Format  Functional and self-contained notebook Happy to see GitHub repos (which you can use as your portfolio in the job market) Project report (30-ish pages - max. 45) Some study relation (but that is debatable and not necessarily required) Report is a (semi/non) technical documentation. Think about a corporate censor that you try to inform  Content  Problem formulation with some practical and theoretical motivation (no huge literature discussion) Methodology (not a critical realist vs positivist discussion but some ideas about what can be concluded potentially) Data sourcing and pre-processing strategy Overall architecture of the model(s) Modelling (incl. finetuning) Results Discussion / Conclusion  Scope  Uses different methods from the course (at least 2 modules) in a creative way Downloading data from kaggle/github and running an ML model is probably not enough for a good performance Creative combinations of methodologies, please:  combine financial data with social media data to look at equity development extract information from text data and create networks. Use network indicators to supplement company data   Evaluation will focus on correct application and communication of DS methods The level of \u0026ldquo;technicality\u0026rdquo; is as in the course with emphasis on application and intuition, not on ML engineering / mathematics However, you will need to demonstrate insight into statistics on a level that is required to discuss your assignment e.g. interpret and discuss performance indicators, outline strategies for improvement e.g. under/oversampling  "},{"uri":"https://sds-aau.github.io/SDS-2021/m1/01_warmup/02_ecosystem/","title":"The Data Science Ecosystem","tags":[],"description":"","content":" Use the tabs to access content\n This Video series contains an introduction to the data science ecosystem, includng a general as well as a R and Python specific overview.\nR Ecosystem Python Ecosystem DS Ecosystem general  Video   Slides     Video   Slides      Video   Slides       "},{"uri":"https://sds-aau.github.io/SDS-2021/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"https://sds-aau.github.io/SDS-2021/","title":"Social Data Science 2021","tags":[],"description":"","content":"Social Data Science 2021 Aalborg University Business School The corresponding Aalborg University Moodle course page can be found here. Note that this page rather than Moodle will represent the central hub for teaching material. At SDS we believe in the power of open science and open education. Following AAU’s “Knowledge for the world” strategy, we make all our material available outside password protected university systems.\n  "},{"uri":"https://sds-aau.github.io/SDS-2021/tags/","title":"Tags","tags":[],"description":"","content":""}]